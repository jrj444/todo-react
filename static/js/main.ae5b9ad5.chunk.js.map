{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","index.js"],"names":["Todo","props","useState","isEditing","setIsEditing","newName","setNewName","editingTemplate","className","onSubmit","e","preventDefault","editTask","id","htmlFor","name","type","value","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","Form","setName","alert","addTask","autoComplete","FilterButton","aria-pressed","isPressed","setFilter","FILTER_MAP","task","FILTER_NAMES","Object","keys","console","log","App","tasks","setTasks","filter","updatedTasks","map","editedTaskList","remainingTasks","taskList","filterList","headingText","length","newTask","nanoid","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae5b9ad5.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const [newName, setNewName] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.editTask(props.id, newName);\r\n    setNewName('');\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          （{props.name}）需要改名为：\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setIsEditing(false)}\r\n        >\r\n          取消\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn_primary todo-edit\">保存</button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n        <input\r\n          id={props.id}\r\n          type=\"checkbox\"\r\n          defaultChecked={props.completed}\r\n          onChange={() => props.toggleTaskCompleted(props.id)}\r\n        />\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          {props.name}\r\n        </label>\r\n      </div>\r\n      <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          onClick={() => setIsEditing(true)}\r\n        >\r\n          编辑\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn_danger\"\r\n          onClick={() => props.deleteTask(props.id)}\r\n        >\r\n          删除\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <li className=\"todo\">\r\n      {isEditing ? editingTemplate : viewTemplate}\r\n    </li>\r\n  );\r\n}","import React, {useState} from 'react';\r\n\r\nexport default function Form(props) {\r\n  const [name, setName] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (name === '') {\r\n      alert(\"任务不能为空\");\r\n    }\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label_lg\">\r\n          需要做些什么？\r\n        </label>\r\n      </h2>\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input_lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn_primary btn_lg\">\r\n        添加任务\r\n      </button>\r\n    </form>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default function FilterButton(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn toggle-btn\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span>{props.name}</span>\r\n    </button>\r\n  );\r\n}","import React, {useState} from \"react\";\nimport {nanoid} from \"nanoid\";\nimport Todo from './components/Todo';\nimport Form from './components/Form';\nimport FilterButton from './components/FilterButton';\n\nconst FILTER_MAP = {\n  'All': () => true,\n  'Active': task => !task.completed,\n  'Completed': task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\nconsole.log(FILTER_NAMES);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n\n  const [filter, setFilter] = useState('All');\n\n  const addTask = (name) => {\n    const newTask = {id: \"todo-\" + nanoid(), name: name, completed: false};\n    setTasks([...tasks, newTask]);\n  };\n\n  const toggleTaskCompleted = (id) => {\n    const updatedTasks = tasks.map(task => {\n      if (id === task.id) {\n        return {...task, completed: !task.completed};\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  };\n\n  const editTask = (id, newName) => {\n    const editedTaskList = tasks.map(task => {\n      if (id === task.id) {\n        return {...task, name: newName};\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  };\n\n  const deleteTask = (id) => {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  };\n\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task =>\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      editTask={editTask}\n      deleteTask={deleteTask}\n    />\n  );\n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const headingText = `共 ${taskList.length} 个任务`;\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>待办清单</h1>\n      <Form addTask={addTask}/>\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">\n        {headingText}\n      </h2>\n      <ul className=\"todo-list stack-large stack-exception\">\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n  {id: \"todo-0\", name: \"吃饭\", completed: true},\n  {id: \"todo-1\", name: \"睡觉\", completed: false},\n  {id: \"todo-2\", name: \"学习\", completed: false}\n];\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}